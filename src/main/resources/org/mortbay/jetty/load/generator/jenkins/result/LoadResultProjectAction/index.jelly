<?xml version="1.0" encoding="UTF-8"?>
<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form"
         xmlns:m="/org/mortbay/jetty/load/generator/jenkins/tags">
  <l:layout title="Load Generator">
    <m:import/>
    <l:main-panel>
      <div>
        Jetty Version:
        <select id="jettyVersions">
          <j:forEach var="jettyVersion" items="${it.getJettyVersions()}">
            <option value="${jettyVersion.key}">${jettyVersion.key}</option>
          </j:forEach>
        </select>
      </div>
      <div>
        Estimated QPS:
        <select id="estimatedQpsSelect">
        </select>
      </div>

      <h2>Global Reponse Time Result</h2>
      <div class="graph-container floating-box-load-result-time" align="right">
        <div id="load_result_response_time_trend" class="graph" style="width: 85%;height: 170px">
        </div>
        <script type="text/javascript" language="javascript">
          jQueryLoadGenerator.noConflict();

          function updateQpsSelect(qpsValues) {

            var $el = jQueryLoadGenerator("#estimatedQpsSelect");
            $el.empty(); // remove old options
            jQueryLoadGenerator.each(qpsValues, function(key,value) {
              $el.append(jQueryLoadGenerator("<option></option>").attr("value", value).text(value));
            });
          }

          function displayGraphVersion(version,estimatedQps){
            jQueryLoadGenerator.getJSON("responseTimeTrend?jettyVersion="+version, function (json) {
              if(!estimatedQps) {
                //var qpsValues = jQueryLoadGenerator.unique(json, function(data) { return data.estimatedQps; });

                var qpsValues= jQueryLoadGenerator.unique(json.map(function (d) { return d.estimatedQps;}));

                updateQpsSelect(qpsValues);
                estimatedQps = jQueryLoadGenerator('#estimatedQpsSelect').val();
              }

              json = jQueryLoadGenerator.grep(json, function( n, i ) {
                return n.estimatedQps == estimatedQps;
              });

              jQueryLoadGenerator("#load_result_response_time_trend").empty();
              var graph = Morris.Line({
                element: 'load_result_response_time_trend',
                data: json,
                xkey: 'startTimeStamp',
                ykeys: ['mean','value90'], // ,'maxValue' ,'value50'
                labels: ['Mean','Value 90'], // , 'Max' ,'Value 50'
                resize: true,
                pointSize: 1,
                parseTime: false,
                hideHover: 'auto',
                dateFormat: function(x) {
                return x;
              },
              xLabelFormat: function(x) {
                return '';// to verbose and non readable Build #' + x.src.buildId;
              },
              hoverCallback: function (index, options, content, row) {
                return 'jettyVersion: ' + row.jettyVersion + '<br/>'
                + 'Mean: ' + row.mean + '<br/>'
                + 'Value 90: ' + row.value90 + '<br/>'
                + 'Estimated QPS: ' + row.estimatedQps + '<br/>'
                + ' Timestamp: ' + row.timestampStr;
                }
              });
            });
          }

          jQueryLoadGenerator('#jettyVersions').on('change', function() {
            version = jQueryLoadGenerator(this).find(":selected").val();
            displayGraphVersion(version,jQueryLoadGenerator('#estimatedQpsSelect').val());
          })
          jQueryLoadGenerator('#estimatedQpsSelect').on('change', function() {
            estimatedQps = jQueryLoadGenerator(this).find(":selected").val();
            displayGraphVersion(jQueryLoadGenerator('#jettyVersions').val(),estimatedQps);
          })
          version = jQueryLoadGenerator('#jettyVersions').val();
          displayGraphVersion(version);
        </script>
      </div>
    </l:main-panel>
  </l:layout>

</j:jelly>